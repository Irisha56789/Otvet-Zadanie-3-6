<?php

// Уровень 1: Легкий

// Задача 1. Конкатенация строк

// Объявляем две строки
$string1 = "Привет, ";
$string2 = "мир!";

// Объединяем строки
$combinedString = $string1 . $string2;

// Выводим результат
echo $combinedString;

// Задача 2. Изменение регистра

// Объявляем строку
$string = "Привет, Мир!";

// Преобразуем строку в верхний регистр
$upperCaseString = strtoupper($string);

// Преобразуем строку в нижний регистр
$lowerCaseString = strtolower($string);

// Выводим результаты
echo "Верхний регистр: " . $upperCaseString . "\n";
echo "Нижний регистр: " . $lowerCaseString . "\n";

// Задача 3. Сравнение строк

// Объявляем две строки
$string1 = "Привет, мир!";
$string2 = "привет, МИР!";

// Сравнение с учетом регистра (используя оператор ===)
if ($string1 === $string2) {
    echo "Строки равны (с учетом регистра).\\n";
} else {
    echo "Строки не равны (с учетом регистра).\\n";
}

// Сравнение без учета регистра (используя оператор ==)
if ($string1 == $string2) {
    echo "Строки равны (без учета регистра).\\n";
} else {
    echo "Строки не равны (без учета регистра).\\n";
}

// Сравнение без учета регистра (используя функцию strcasecmp)
if (strcasecmp($string1, $string2) === 0) {
    echo "Строки равны (без учета регистра, с использованием strcasecmp).\\n";
} else {
    echo "Строки не равны (без учета регистра, с использованием strcasecmp).\\n";
}

// Задача 4. Поиск подстроки

// Исходная строка
$originalStr = "Привет, мир! Как дела?";
// Подстрока, которую мы ищем
$substring = "мир";

// Находим позицию подстроки
$position = strpos($originalStr, $substring);

// Проверяем результат
if ($position !== false) {
    echo "Подстрока '{$substring}' найдена на позиции: $position";
} else {
    echo "Подстрока '{$substring}' не найдена.";
}

// Задача 5. Замена подстроки

// Исходная строка
$originalString = "Привет, мир! Сегодня хороший день, мир!";
// Слово, которое нужно заменить
$searchWord = "мир";
// Слово, на которое будем заменять
$replaceWord = "ребята";
// Заменяем слово
$newString = str_replace($searchWord, $replaceWord, $originalString);

// Выводим результат
echo $newString;

// Задача 6. Форматирование строки

$name = "Роберт";
$age = 30;
$city = "Чикаго";
$formattedString = sprintf("Его зовут %s, ему %d лет, он живет в %s.", $name, $age, $city);
echo $formattedString;

// Задача 7. Разделение строки

// Исходная строка
$originalString = "яблоко,банан,груша,апельсин";
// Разделитель
$delimiter = ",";

// Разделяем строку на массив
$array = explode($delimiter, $originalString);

// Выводим массив
print_r($array);

// Объединяем массив обратно в строку
$newString = implode($delimiter, $array);

// Выводим объединенную строку
echo $newString;

// Задача 8. Работа с многострочным текстом

//Исходный многострочный текст
$multilineText = "Это первая строка.\nЭто вторая строка.\nЭто третья строка.";

// Преобразуем текст в HTML-разметку с использованием nl2br()
$htmlText = nl2br($multilineText);

// Выводим результат
echo $htmlText;

// Уровень 2: Усложненный

// Задача 1. Сложная конкатенация строк

// Определяем переменные
$name = "Дональд";
$age = 78;
$city = "Майами";

// Объединяем строки с переменными
$result = "Его зовут " . $name . ". Ему " . $age . " лет и он живет в " . $city . ".";

// Выводим результат
echo $result;

// Задача 2. Изменение регистра с условиями

// Исходная строка
$inputString = "иВанов иВан иВанович";

// Преобразуем строку: сначала в нижний регистр, затем каждое слово с заглавной буквы
$formattedString = ucwords(strtolower($inputString));

// Выводим результат
echo $formattedString;

// Задача 3. Сравнение строк с учётом регистра и без

// Исходные строки
$string1 = "Hello World";
$string2 = "hello world";

// Проверка на полное совпадение с учетом регистра
if ($string1 === $string2) {
    echo "Строки полностью совпадают (с учетом регистра).<br>";
} else {
    echo "Строки не совпадают (с учетом регистра).<br>";
}

// Проверка на полное совпадение без учета регистра
if (strcasecmp($string1, $string2) === 0) {
    echo "Строки полностью совпадают (без учета регистра).<br>";
} else {
    echo "Строки не совпадают (без учета регистра).<br>";
}

// Задача 4. Замена подстроки с использованием массива

// Исходная строка
$originalString = "Привет, мир! Сегодня хороший день для программирования.";

// Массивы для поиска и замены
$search = array("Привет", "мир", "хороший", "программирования");
$replace = array("Здравствуй", "море", "прекрасный", "плавания");

// Замена слов
$modifiedString = str_replace($search, $replace, $originalString);

// Вывод результата
echo $modifiedString;

// Задача 5. Форматирование строки с числом

// Определяем числовые значения и строки
$name = "Шарль";
$age = 30;
$city = "Бордо";

// Форматируем строку с использованием sprintf
$formattedString = sprintf("Его зовут %s, ему %d лет, он живет в %s.", $name, $age, $city);

// Выводим отформатированную строку
echo $formattedString;

// Задача 6. Разделение и объединение сложной строки

// Исходная строка с числовыми значениями, разделенными запятыми
$numbersString = "10,20,30,40,50";

// Разделяем строку на массив чисел
$numbersArray = explode(",", $numbersString);

// Суммируем элементы массива
$sum = array_sum($numbersArray);

// Выводим результат
echo "Сумма чисел: " . $sum;

// Задача 7. Создание случайной строки

function generateRandomString($length = 15) {
    // Массив символов: буквы и цифры
    $characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
    $charactersLength = strlen($characters);
    $randomString = '';

    // Генерация случайной строки
    for ($i = 0; $i < $length; $i++) {
        // Выбор случайного символа из массива
        $randomString .= $characters[rand(0, $charactersLength - 1)];
    }

    return $randomString;
}

// Пример использования функции
echo generateRandomString(); // Генерирует случайную строку длиной до 15 символов

// Задача 8. Проверка строки на палиндром

function isPalindrome($string) {
    // Убираем пробелы и приводим строку к нижнему регистру
    $cleanString = mb_strtolower(str_replace(' ', '', $string));
    
    // Переворачиваем строку
    $reversedString = strrev($cleanString);
    
    // Сравниваем оригинальную и перевернутую строки
    return $cleanString === $reversedString;
}

// Примеры использования функции
$string1 = "А роза упала на лапу Азора";
$string2 = "Абракадабра";

echo "\"$string1\" является палиндромом? " . (isPalindrome($string1) ? 'Да' : 'Нет') . "\n"; 
echo "\"$string2\"  является палиндромом? " . (isPalindrome($string2) ? 'Да' : 'Нет') . "\n";

?>
